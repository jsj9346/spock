# Alertmanager Environment Variables Configuration
# Copy this file to .env.alertmanager and fill in your credentials
# DO NOT commit .env.alertmanager to version control!

# ========================================
# Slack Configuration
# ========================================

# Slack Incoming Webhook URL
# Get this from: https://api.slack.com/apps → Your App → Incoming Webhooks
# Format: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXX
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# ========================================
# Email Configuration (SMTP)
# ========================================

# SMTP Server Configuration
# Gmail: smtp.gmail.com:587
# Outlook: smtp-mail.outlook.com:587
# Custom: your-smtp-server.com:587
EMAIL_SMTP_HOST=smtp.gmail.com
EMAIL_SMTP_PORT=587

# SMTP Authentication Credentials
# For Gmail: Use App Password (16 characters)
# Generate at: https://myaccount.google.com/apppasswords
# Format: xxxx xxxx xxxx xxxx (spaces are okay)
EMAIL_USERNAME=your-email@gmail.com
EMAIL_PASSWORD=your-app-password-here

# Alert Recipients (comma-separated for multiple)
EMAIL_TO=team@example.com,admin@example.com

# ========================================
# Custom Webhook Configuration
# ========================================

# Custom Webhook Endpoint URL
# This endpoint will receive JSON payloads for all alerts
# Example: https://your-webhook-endpoint.com/alerts
# Local testing: http://host.docker.internal:5001/alerts
CUSTOM_WEBHOOK_URL=https://your-webhook-endpoint.com/alerts

# ========================================
# Configuration Notes
# ========================================

# 1. SLACK_WEBHOOK_URL:
#    - Create a Slack App at https://api.slack.com/apps
#    - Enable "Incoming Webhooks"
#    - Add webhook to workspace for each channel:
#      * #quant-critical-alerts (Critical alerts)
#      * #quant-warnings (Warning alerts)
#
# 2. EMAIL SMTP (Gmail):
#    - Enable 2-Factor Authentication
#    - Generate App Password at https://myaccount.google.com/apppasswords
#    - Use App Password, NOT your account password
#
# 3. EMAIL SMTP (Outlook/Microsoft 365):
#    - Use your regular account password
#    - May need to enable "Less secure app access"
#
# 4. CUSTOM_WEBHOOK_URL:
#    - Must accept POST requests with JSON body
#    - Should return HTTP 200 on success
#    - See docs/ALERT_NOTIFICATION_SETUP.md for payload format
#
# 5. Security:
#    - NEVER commit this file with real credentials
#    - Add .env.alertmanager to .gitignore
#    - Rotate credentials regularly (every 90 days)
#    - Use dedicated email account for alerts
#
# 6. Testing:
#    - Run: python3 scripts/test_alerts.py --all
#    - Check: docker-compose logs alertmanager
#    - Verify: curl http://localhost:9093/api/v2/status

# ========================================
# Optional: Additional Configuration
# ========================================

# Alertmanager External URL (for links in notifications)
# Default: http://localhost:9093
# ALERTMANAGER_EXTERNAL_URL=https://alertmanager.yourcompany.com

# Prometheus External URL (for links in notifications)
# Default: http://localhost:9090
# PROMETHEUS_EXTERNAL_URL=https://prometheus.yourcompany.com

# Grafana External URL (for dashboard links)
# Default: http://localhost:3000
# GRAFANA_EXTERNAL_URL=https://grafana.yourcompany.com
